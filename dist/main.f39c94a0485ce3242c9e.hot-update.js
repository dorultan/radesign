exports.id = "main";
exports.modules = {

/***/ "./api/controllers/projectsController.js":
/*!***********************************************!*\
  !*** ./api/controllers/projectsController.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _models_project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/project */ \\\"./api/models/project.js\\\");\\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multer */ \\\"multer\\\");\\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(multer__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var multer_s3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multer-s3 */ \\\"multer-s3\\\");\\n/* harmony import */ var multer_s3__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(multer_s3__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aws-sdk */ \\\"aws-sdk\\\");\\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(aws_sdk__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \\\"fs\\\");\\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_4__);\\n\\n\\n\\n\\n\\n\\nvar replaceSpaceFromString = function replaceSpaceFromString(string) {\\n  var str = string.toLowerCase();\\n  while (str.includes(' ')) {\\n    str = str.replace(' ', '-');\\n  }\\n\\n  return str;\\n};\\n\\naws_sdk__WEBPACK_IMPORTED_MODULE_3___default.a.config.update({\\n  accessKeyId: \\\"AKIAJCF6UXSVA3ZA6E3Q\\\" || false,\\n  secretAccessKey: \\\"Ph5m3EuYYgQjgNJvabbvnLacRjRa/Hwb7QABw7WZ\\\" || false,\\n  region: 'eu-west-2'\\n});\\nvar s3 = new aws_sdk__WEBPACK_IMPORTED_MODULE_3___default.a.S3();\\n\\nvar storage = multer_s3__WEBPACK_IMPORTED_MODULE_2___default()({\\n  s3: s3,\\n  bucket: 'radesign',\\n  acl: 'public-read',\\n  key: function key(req, file, cb) {\\n    cb(null, file.originalname);\\n  }\\n});\\n\\nvar upload = multer__WEBPACK_IMPORTED_MODULE_1___default()({ storage: storage }).single('image');\\n\\nvar deleteFiles = function deleteFiles(arr, cb) {\\n  var params = {\\n    Delete: {\\n      Objects: [],\\n      Quiet: false\\n    },\\n    Bucket: 'radesign'\\n  };\\n  arr.forEach(function (fileUrl, idx) {\\n    var key = fileUrl.split('/');\\n    key = key[key.length - 1];\\n    params.Delete.Objects.push({\\n      Key: key\\n    });\\n  });\\n  s3.deleteObjects(params, cb);\\n};\\n\\nvar projectsController = {\\n  get: function get(req, res, next) {\\n\\n    if (req.query.uid) {\\n      _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOne({ uid: req.query.uid }).exec(function (err, data) {\\n\\n        if (err) {\\n          return res.status(404).json({ message: \\\"Not found\\\" });\\n        }\\n\\n        return res.status(200).json(data);\\n      });\\n    } else {\\n      next();\\n    }\\n  },\\n  getAll: function getAll(req, res) {\\n\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].find().exec(function (err, data) {\\n\\n      if (err) {\\n        return res.status(404).json({ message: \\\"Projects not found\\\" });\\n      }\\n\\n      res.status(200).json(data);\\n    });\\n  },\\n  addImage: function addImage(req, res) {\\n    upload(req, res, function (err) {\\n      var file = req.file;\\n\\n      var uid = req.body.uid;\\n\\n      if (err instanceof multer__WEBPACK_IMPORTED_MODULE_1___default.a.MulterError) {\\n        return res.status(400).json({ multerError: err });\\n      }\\n\\n      _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate({ uid: uid }, {\\n        $push: {\\n          uploads: file.path\\n        }\\n      }, {\\n        new: true\\n      }).exec(function (err, data) {\\n        if (err) {\\n          return res.status(400).json({ error: err });\\n        }\\n\\n        return res.status(200).json(data);\\n      });\\n    });\\n  },\\n  removeImage: function removeImage(req, res) {\\n    var uid = req.body.uid;\\n    var path = req.body.path;\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate(id, {\\n      $pull: {\\n        uploads: path\\n      }\\n    }, {\\n      upsert: true,\\n      new: true\\n    }).exec(function (err, data) {\\n\\n      if (err) {\\n        return res.status(400).json({ error: err });\\n      }\\n\\n      fs__WEBPACK_IMPORTED_MODULE_4___default.a.unlink(path, function (err) {\\n        if (err) {\\n          return res.status(400).json({ error: err });\\n        }\\n        return res.status(200).json(data);\\n      });\\n    });\\n  },\\n  create: function create(req, res) {\\n\\n    upload(req, res, function (err) {\\n      var file = req.file;\\n      if (err instanceof multer__WEBPACK_IMPORTED_MODULE_1___default.a.MulterError) {\\n        return res.status(500).json(err);\\n      }\\n\\n      if (file) {\\n        _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].create({\\n          imageUrl: file.location,\\n          description: req.body.description,\\n          name: req.body.name,\\n          uid: replaceSpaceFromString(req.body.name),\\n          tag: req.body.tag,\\n          color: req.body.color\\n        }, function (err, data) {\\n          if (err) {\\n            return res.status(404).json({ message: err.message });\\n          }\\n\\n          return res.status(200).json(data);\\n        });\\n      } else {\\n        res.status(500).json({ message: \\\"Can't upload image.\\\" });\\n      }\\n    });\\n  },\\n  update: function update(req, res) {\\n    var uid = req.body.uid;\\n    var body = req.body;\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate({ uid: uid }, {\\n      description: body.description,\\n      name: body.name,\\n      tag: req.body.tag,\\n      color: req.body.color,\\n      uid: replaceSpaceFromString(req.body.uid)\\n    }, { new: true }).exec(function (err, data) {\\n      if (err) {\\n        return res.status(404).json({ message: 'The project is not updated.' });\\n      }\\n\\n      res.status(200).json(data);\\n    });\\n  },\\n  updateImage: function updateImage(req, res, next) {\\n\\n    upload(req, res, function (err) {\\n      var file = req.file;\\n      var uid = req.body.uid;\\n      var body = req.body;\\n\\n      if (file) {\\n        _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate({ uid: uid }, {\\n          imageUrl: file.location,\\n          description: body.description,\\n          name: body.name,\\n          tag: body.tag,\\n          color: body.color,\\n          uid: replaceSpaceFromString(body.name)\\n        }, { new: true }).exec(function (err, data) {\\n          var key = body.oldImagePath.split('/');\\n          key = key[key.length - 1];\\n          if (err) {\\n            return res.status(404).json({ message: 'The project is not updated.' });\\n          }\\n\\n          s3.deleteObject({ Bucket: 'radesign', Key: key }, function (err, success) {\\n            if (err) {\\n              return res.status(404).json({ message: \\\"Can't remove image.\\\" });\\n            }\\n\\n            return res.status(200).json(data);\\n          });\\n        });\\n        // Update the project based on project_id received from the body;\\n      } else {\\n        next();\\n      }\\n    });\\n  },\\n  delete: function _delete(req, res) {\\n\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndRemove({ uid: req.query.uid }).exec(function (err, data) {\\n      var images = [];\\n\\n      if (err) {\\n\\n        return res.status(400).json({ message: \\\"Can't remove the project.\\\" });\\n      }\\n      images.push(data.imageUrl);\\n      images = images.concat(data.uploads);\\n\\n      deleteFiles(images, function (err, success) {\\n        if (err) {\\n          return res.status(405).json({ message: \\\"Can't remove files.\\\", error: err });\\n        }\\n        return res.status(200).json(data);\\n      });\\n    });\\n  }\\n};\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (projectsController);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///./api/controllers/projectsController.js\\n\");\n\n//# sourceURL=webpack:///./api/controllers/projectsController.js?");

/***/ })

};