exports.id = "main";
exports.modules = {

/***/ "./api/controllers/projectsController.js":
/*!***********************************************!*\
  !*** ./api/controllers/projectsController.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("eval(\"__webpack_require__.r(__webpack_exports__);\\n/* harmony import */ var _models_project__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/project */ \\\"./api/models/project.js\\\");\\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multer */ \\\"multer\\\");\\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(multer__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var multer_s3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multer-s3 */ \\\"multer-s3\\\");\\n/* harmony import */ var multer_s3__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(multer_s3__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aws-sdk */ \\\"aws-sdk\\\");\\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(aws_sdk__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \\\"fs\\\");\\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_4__);\\n\\n\\n\\n\\n\\n\\nvar replaceSpaceFromString = function replaceSpaceFromString(string) {\\n  var str = string.toLowerCase();\\n  while (str.includes(' ')) {\\n    str = str.replace(' ', '-');\\n  }\\n\\n  return str;\\n};\\n\\naws_sdk__WEBPACK_IMPORTED_MODULE_3___default.a.config.update({\\n  accessKeyId: \\\"AKIAJCF6UXSVA3ZA6E3Q\\\" || false,\\n  secretAccessKey: \\\"Ph5m3EuYYgQjgNJvabbvnLacRjRa/Hwb7QABw7WZ\\\" || false,\\n  region: 'eu-west-2'\\n});\\nvar s3 = new aws_sdk__WEBPACK_IMPORTED_MODULE_3___default.a.S3();\\n\\nvar storage = multer_s3__WEBPACK_IMPORTED_MODULE_2___default()({\\n  s3: s3,\\n  bucket: 'radesign',\\n  acl: 'public-read',\\n  key: function key(req, file, cb) {\\n    cb(null, file.originalname);\\n  }\\n});\\n\\nvar upload = multer__WEBPACK_IMPORTED_MODULE_1___default()({ storage: storage }).single('image');\\n\\nvar deleteFiles = function deleteFiles(arr, cb) {\\n  var params = {\\n    Delete: {\\n      Objects: [],\\n      Quiet: false\\n    },\\n    Bucket: 'radesign'\\n  };\\n  arr.forEach(function (fileUrl, idx) {\\n    params.Delete.Objects.push({\\n      Key: fileUrl\\n    });\\n  });\\n\\n  s3.deleteObjects(params, cb);\\n};\\n\\nvar projectsController = {\\n  get: function get(req, res, next) {\\n\\n    if (req.query.uid) {\\n      _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOne({ uid: req.query.uid }).exec(function (err, data) {\\n\\n        if (err) {\\n          return res.status(404).json({ message: \\\"Not found\\\" });\\n        }\\n\\n        return res.status(200).json(data);\\n      });\\n    } else {\\n      next();\\n    }\\n  },\\n  getAll: function getAll(req, res) {\\n\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].find().exec(function (err, data) {\\n\\n      if (err) {\\n        return res.status(404).json({ message: \\\"Projects not found\\\" });\\n      }\\n\\n      res.status(200).json(data);\\n    });\\n  },\\n  addImage: function addImage(req, res) {\\n    upload(req, res, function (err) {\\n      var file = req.file;\\n\\n      var uid = req.body.uid;\\n\\n      if (err instanceof multer__WEBPACK_IMPORTED_MODULE_1___default.a.MulterError) {\\n        return res.status(400).json({ multerError: err });\\n      }\\n\\n      _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate({ uid: uid }, {\\n        $push: {\\n          uploads: file.path\\n        }\\n      }, {\\n        new: true\\n      }).exec(function (err, data) {\\n        if (err) {\\n          return res.status(400).json({ error: err });\\n        }\\n\\n        return res.status(200).json(data);\\n      });\\n    });\\n  },\\n  removeImage: function removeImage(req, res) {\\n    var uid = req.body.uid;\\n    var path = req.body.path;\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate(id, {\\n      $pull: {\\n        uploads: path\\n      }\\n    }, {\\n      upsert: true,\\n      new: true\\n    }).exec(function (err, data) {\\n\\n      if (err) {\\n        return res.status(400).json({ error: err });\\n      }\\n\\n      fs__WEBPACK_IMPORTED_MODULE_4___default.a.unlink(path, function (err) {\\n        if (err) {\\n          return res.status(400).json({ error: err });\\n        }\\n        return res.status(200).json(data);\\n      });\\n    });\\n  },\\n  create: function create(req, res) {\\n\\n    upload(req, res, function (err) {\\n      var file = req.file;\\n      if (err instanceof multer__WEBPACK_IMPORTED_MODULE_1___default.a.MulterError) {\\n        return res.status(500).json(err);\\n      }\\n\\n      if (file) {\\n        _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].create({\\n          imageUrl: file.location,\\n          description: req.body.description,\\n          name: req.body.name,\\n          uid: replaceSpaceFromString(req.body.name),\\n          tag: req.body.tag,\\n          color: req.body.color\\n        }, function (err, data) {\\n          if (err) {\\n            return res.status(404).json({ message: err.message });\\n          }\\n\\n          return res.status(200).json(data);\\n        });\\n      } else {\\n        res.status(500).json({ message: \\\"Can't upload image.\\\" });\\n      }\\n    });\\n  },\\n  update: function update(req, res) {\\n    var uid = req.body.uid;\\n    var body = req.body;\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate({ uid: uid }, {\\n      description: body.description,\\n      name: body.name,\\n      tag: req.body.tag,\\n      color: req.body.color,\\n      uid: replaceSpaceFromString(req.body.uid)\\n    }, { new: true }).exec(function (err, data) {\\n      if (err) {\\n        return res.status(404).json({ message: 'The project is not updated.' });\\n      }\\n\\n      res.status(200).json(data);\\n    });\\n  },\\n  updateImage: function updateImage(req, res, next) {\\n\\n    uploadWithMetaImage(req, res, function (err) {\\n      var file = req.file;\\n      var uid = req.body.uid;\\n      var body = req.body;\\n\\n      if (file) {\\n        _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndUpdate({ uid: uid }, {\\n          imageUrl: file.path,\\n          description: body.description,\\n          name: body.name,\\n          tag: body.tag,\\n          color: body.color,\\n          uid: replaceSpaceFromString(body.name)\\n        }, { new: true }).exec(function (err, data) {\\n          if (err) {\\n            return res.status(404).json({ message: 'The project is not updated.' });\\n          }\\n\\n          fs__WEBPACK_IMPORTED_MODULE_4___default.a.unlink(body.oldImagePath, function (err) {\\n            if (err) {\\n              return res.status(404).json({ message: \\\"Can't remove image.\\\" });\\n            }\\n\\n            return res.status(200).json(data);\\n          });\\n        });\\n        // Update the project based on project_id received from the body;\\n      } else {\\n        next();\\n      }\\n    });\\n  },\\n  delete: function _delete(req, res) {\\n\\n    _models_project__WEBPACK_IMPORTED_MODULE_0__[\\\"default\\\"].findOneAndRemove({ uid: req.query.uid }).exec(function (err, data) {\\n      var images = [];\\n\\n      if (err) {\\n\\n        return res.status(400).json({ message: \\\"Can't remove the project.\\\" });\\n      }\\n      images.push(data.imageUrl);\\n      images = images.concat(data.uploads);\\n\\n      deleteFiles(images, function (err, success) {\\n        if (err) {\\n          return res.status(405).json({ message: \\\"Can't remove files.\\\", error: err });\\n        }\\n        console.log(success);\\n        return res.status(200).json(data);\\n      });\\n    });\\n  }\\n};\\n\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (projectsController);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcGkvY29udHJvbGxlcnMvcHJvamVjdHNDb250cm9sbGVyLmpzPzE2NTIiXSwibmFtZXMiOlsicmVwbGFjZVNwYWNlRnJvbVN0cmluZyIsInN0cmluZyIsInN0ciIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJyZXBsYWNlIiwiYXdzIiwiY29uZmlnIiwidXBkYXRlIiwiYWNjZXNzS2V5SWQiLCJwcm9jZXNzIiwic2VjcmV0QWNjZXNzS2V5IiwicmVnaW9uIiwiczMiLCJTMyIsInN0b3JhZ2UiLCJtdWx0ZXJTMyIsImJ1Y2tldCIsImFjbCIsImtleSIsInJlcSIsImZpbGUiLCJjYiIsIm9yaWdpbmFsbmFtZSIsInVwbG9hZCIsIm11bHRlciIsInNpbmdsZSIsImRlbGV0ZUZpbGVzIiwiYXJyIiwicGFyYW1zIiwiRGVsZXRlIiwiT2JqZWN0cyIsIlF1aWV0IiwiQnVja2V0IiwiZm9yRWFjaCIsImZpbGVVcmwiLCJpZHgiLCJwdXNoIiwiS2V5IiwiZGVsZXRlT2JqZWN0cyIsInByb2plY3RzQ29udHJvbGxlciIsImdldCIsInJlcyIsIm5leHQiLCJxdWVyeSIsInVpZCIsIlByb2plY3QiLCJmaW5kT25lIiwiZXhlYyIsImVyciIsImRhdGEiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImdldEFsbCIsImZpbmQiLCJhZGRJbWFnZSIsImJvZHkiLCJNdWx0ZXJFcnJvciIsIm11bHRlckVycm9yIiwiZmluZE9uZUFuZFVwZGF0ZSIsIiRwdXNoIiwidXBsb2FkcyIsInBhdGgiLCJuZXciLCJlcnJvciIsInJlbW92ZUltYWdlIiwiaWQiLCIkcHVsbCIsInVwc2VydCIsImZzIiwidW5saW5rIiwiY3JlYXRlIiwiaW1hZ2VVcmwiLCJsb2NhdGlvbiIsImRlc2NyaXB0aW9uIiwibmFtZSIsInRhZyIsImNvbG9yIiwidXBkYXRlSW1hZ2UiLCJ1cGxvYWRXaXRoTWV0YUltYWdlIiwib2xkSW1hZ2VQYXRoIiwiZGVsZXRlIiwiZmluZE9uZUFu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QU9oQixHQUF4QyxFQUFyQixDQUFQO0FBQ0Q7QUFDRHNDLGdCQUFRQyxHQUFSLENBQVlGLE9BQVo7QUFDQSxlQUFPNUMsSUFBSVMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCRixJQUFyQixDQUFQO0FBQ0QsT0FORDtBQVFELEtBdEJEO0FBdUJEO0FBL053QixDQUEzQjs7QUFrT2VWLGlGQUFmIiwiZmlsZSI6Ii4vYXBpL2NvbnRyb2xsZXJzL3Byb2plY3RzQ29udHJvbGxlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9qZWN0IGZyb20gJy4uL21vZGVscy9wcm9qZWN0JztcclxuaW1wb3J0IG11bHRlciBmcm9tICdtdWx0ZXInO1xyXG5pbXBvcnQgbXVsdGVyUzMgZnJvbSAnbXVsdGVyLXMzJztcclxuaW1wb3J0IGF3cyBmcm9tICdhd3Mtc2RrJztcclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuXHJcbmNvbnN0IHJlcGxhY2VTcGFjZUZyb21TdHJpbmcgPSAoc3RyaW5nKSA9PiB7XHJcbiAgbGV0IHN0ciA9IHN0cmluZy50b0xvd2VyQ2FzZSgpO1xyXG4gIHdoaWxlIChzdHIuaW5jbHVkZXMoJyAnKSkge1xyXG4gICAgICBzdHIgPSBzdHIucmVwbGFjZSgnICcsICctJyk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gc3RyO1xyXG59XHJcblxyXG5cclxuYXdzLmNvbmZpZy51cGRhdGUoe1xyXG4gIGFjY2Vzc0tleUlkOiBwcm9jZXNzLmVudi5BV1NfQUNDRVNTX0tFWV9JRCB8fCBcIkFLSUFKQ0Y2VVhTVkEzWkE2RTNRXCIsXHJcbiAgc2VjcmV0QWNjZXNzS2V5OiBwcm9jZXNzLmVudi5BV1NfU0VDUkVUX0FDQ0VTU19LRVkgfHwgXCJQaDVtM0V1WVlnUWpnTkp2YWJidm5MYWNSalJhL0h3YjdRQUJ3N1daXCIsXHJcbiAgcmVnaW9uOiAnZXUtd2VzdC0yJ1xyXG59KVxyXG5jb25zdCBzMyA9IG5ldyBhd3MuUzMoKVxyXG5cclxuY29uc3Qgc3RvcmFnZSA9IG11bHRlclMzKHtcclxuICBzMzogczMsXHJcbiAgYnVja2V0OiAncmFkZXNpZ24nLFxyXG4gIGFjbDogJ3B1YmxpYy1yZWFkJyxcclxuICBrZXk6IGZ1bmN0aW9uKHJlcSwgZmlsZSwgY2IpIHtcclxuICAgIGNiKG51bGwsIGZpbGUub3JpZ2luYWxuYW1lKTtcclxuICB9XHJcbn0pXHJcblxyXG5jb25zdCB1cGxvYWQgPSBtdWx0ZXIoe3N0b3JhZ2U6IHN0b3JhZ2V9KS5zaW5nbGUoJ2ltYWdlJyk7XHJcblxyXG5cclxuY29uc3QgZGVsZXRlRmlsZXMgPSAoYXJyLCBjYikgPT4ge1xyXG4gIGNvbnN0IHBhcmFtcyA9IHtcclxuICAgIERlbGV0ZToge1xyXG4gICAgICBPYmplY3RzOiBbXHJcblxyXG4gICAgICBdLFxyXG4gICAgICBRdWlldDogZmFsc2VcclxuICAgIH0sXHJcbiAgICBCdWNrZXQ6ICdyYWRlc2lnbidcclxuICB9XHJcbiAgYXJyLmZvckVhY2goKGZpbGVVcmwsIGlkeCkgPT4ge1xyXG4gICAgcGFyYW1zLkRlbGV0ZS5PYmplY3RzLnB1c2goe1xyXG4gICAgICBLZXk6IGZpbGVVcmxcclxuICAgIH0pXHJcbiAgfSlcclxuXHJcbiAgczMuZGVsZXRlT2JqZWN0cyhwYXJhbXMsIGNiKVxyXG59XHJcblxyXG5jb25zdCBwcm9qZWN0c0NvbnRyb2xsZXIgPSB7XHJcbiAgZ2V0KHJlcSwgcmVzLCBuZXh0KSB7XHJcblxyXG4gICAgaWYocmVxLnF1ZXJ5LnVpZCkge1xyXG4gICAgICBQcm9qZWN0XHJcbiAgICAgIC5maW5kT25lKHt1aWQ6IHJlcS5xdWVyeS51aWR9KVxyXG5cclxuICAgICAgLmV4ZWMoKGVyciwgZGF0YSkgPT4ge1xyXG5cclxuICAgICAgICBpZihlcnIpIHtcclxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7bWVzc2FnZTogXCJOb3QgZm91bmRcIn0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKGRhdGEpO1xyXG4gICAgICB9KVxyXG5cclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICBuZXh0KCk7XHJcbiAgICB9XHJcblxyXG5cclxuICB9LFxyXG5cclxuICBnZXRBbGwocmVxLCByZXMpIHtcclxuXHJcbiAgICBQcm9qZWN0XHJcblxyXG4gICAgLmZpbmQoKVxyXG5cclxuICAgIC5leGVjKChlcnIsIGRhdGEpID0+IHtcclxuXHJcbiAgICAgIGlmKGVycikge1xyXG4gICAgICAgIHJldHVybiAgcmVzLnN0YXR1cyg0MDQpLmpzb24oe21lc3NhZ2U6IFwiUHJvamVjdHMgbm90IGZvdW5kXCJ9KVxyXG4gICAgICB9XHJcblxyXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxuICAgIH0pXHJcbiAgfSxcclxuXHJcbiAgYWRkSW1hZ2UocmVxLCByZXMpIHtcclxuICAgIHVwbG9hZChyZXEsIHJlcywgZnVuY3Rpb24oZXJyKSB7XHJcbiAgICAgIGNvbnN0IGZpbGUgPSByZXEuZmlsZTtcclxuXHJcbiAgICAgIGNvbnN0IHVpZCA9IHJlcS5ib2R5LnVpZDtcclxuXHJcbiAgICAgIGlmKGVyciBpbnN0YW5jZW9mIG11bHRlci5NdWx0ZXJFcnJvcikge1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7bXVsdGVyRXJyb3I6IGVycn0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBQcm9qZWN0XHJcblxyXG4gICAgICAuZmluZE9uZUFuZFVwZGF0ZSh7dWlkOiB1aWR9LFxyXG4gICAgICB7XHJcbiAgICAgICAgJHB1c2g6IHtcclxuICAgICAgICAgIHVwbG9hZHM6IGZpbGUucGF0aFxyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIG5ldzogdHJ1ZVxyXG4gICAgICB9KVxyXG5cclxuICAgICAgLmV4ZWMoKGVyciwgZGF0YSkgPT4ge1xyXG4gICAgICAgIGlmKGVycikge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtlcnJvcjogZXJyfSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSxcclxuXHJcbiAgcmVtb3ZlSW1hZ2UocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHVpZCA9IHJlcS5ib2R5LnVpZDtcclxuICAgIGNvbnN0IHBhdGggPSByZXEuYm9keS5wYXRoO1xyXG4gICAgUHJvamVjdFxyXG5cclxuICAgIC5maW5kT25lQW5kVXBkYXRlKGlkLFxyXG4gICAge1xyXG4gICAgICAkcHVsbDoge1xyXG4gICAgICAgIHVwbG9hZHM6IHBhdGhcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdXBzZXJ0OiB0cnVlLFxyXG4gICAgICBuZXc6IHRydWVcclxuICAgIH0pXHJcblxyXG4gICAgLmV4ZWMoKGVyciwgZGF0YSkgPT4ge1xyXG5cclxuICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtlcnJvcjogZXJyfSlcclxuICAgICAgfVxyXG5cclxuICAgICAgZnMudW5saW5rKHBhdGgsIChlcnIpID0+IHtcclxuICAgICAgICBpZihlcnIpIHtcclxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7ZXJyb3I6IGVycn0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSxcclxuXHJcbiAgY3JlYXRlKHJlcSwgcmVzKSB7XHJcblxyXG4gICAgdXBsb2FkKHJlcSwgcmVzLCBmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0Y29uc3QgZmlsZSA9IHJlcS5maWxlO1xyXG5cdFx0XHRpZihlcnIgaW5zdGFuY2VvZiBtdWx0ZXIuTXVsdGVyRXJyb3IpIHtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oZXJyKTtcclxuXHRcdFx0fVxyXG5cclxuICAgICAgaWYoZmlsZSkge1xyXG4gICAgICAgIFByb2plY3RcclxuXHJcbiAgICAgICAgLmNyZWF0ZSh7XHJcbiAgICAgICAgICBpbWFnZVVybDogZmlsZS5sb2NhdGlvbixcclxuICAgICAgICAgIGRlc2NyaXB0aW9uOiByZXEuYm9keS5kZXNjcmlwdGlvbixcclxuICAgICAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWUsXHJcbiAgICAgICAgICB1aWQ6IHJlcGxhY2VTcGFjZUZyb21TdHJpbmcocmVxLmJvZHkubmFtZSksXHJcbiAgICAgICAgICB0YWc6IHJlcS5ib2R5LnRhZyxcclxuICAgICAgICAgIGNvbG9yOiByZXEuYm9keS5jb2xvclxyXG4gICAgICAgIH0sIChlcnIsIGRhdGEpID0+IHtcclxuICAgICAgICAgIGlmKGVycikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe21lc3NhZ2U6IGVyci5tZXNzYWdlfSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oZGF0YSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7bWVzc2FnZTogXCJDYW4ndCB1cGxvYWQgaW1hZ2UuXCJ9KVxyXG4gICAgICB9XHJcblxyXG4gICAgfSlcclxuICB9LFxyXG5cclxuICB1cGRhdGUocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IHVpZCA9IHJlcS5ib2R5LnVpZDtcclxuICAgIGNvbnN0IGJvZHkgPSByZXEuYm9keTtcclxuICAgIFByb2plY3RcclxuICAgIC5maW5kT25lQW5kVXBkYXRlKHt1aWQ6IHVpZH0sXHJcbiAgICAgIHtcclxuICAgICAgICBkZXNjcmlwdGlvbjogYm9keS5kZXNjcmlwdGlvbixcclxuICAgICAgICBuYW1lOiBib2R5Lm5hbWUsXHJcbiAgICAgICAgdGFnOiByZXEuYm9keS50YWcsXHJcbiAgICAgICAgY29sb3I6IHJlcS5ib2R5LmNvbG9yLFxyXG4gICAgICAgIHVpZDogcmVwbGFjZVNwYWNlRnJvbVN0cmluZyhyZXEuYm9keS51aWQpXHJcbiAgICAgIH0sIHtuZXc6IHRydWV9KVxyXG5cclxuICAgIC5leGVjKChlcnIsIGRhdGEpID0+IHtcclxuICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHttZXNzYWdlOiAnVGhlIHByb2plY3QgaXMgbm90IHVwZGF0ZWQuJ30pXHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGRhdGEpXHJcbiAgICB9KVxyXG4gIH0sXHJcblxyXG4gIHVwZGF0ZUltYWdlKHJlcSwgcmVzLCBuZXh0KSB7XHJcblxyXG4gICAgdXBsb2FkV2l0aE1ldGFJbWFnZShyZXEsIHJlcywgZnVuY3Rpb24oZXJyKSB7XHJcbiAgICAgIGNvbnN0IGZpbGUgPSByZXEuZmlsZTtcclxuICAgICAgY29uc3QgdWlkID0gcmVxLmJvZHkudWlkO1xyXG4gICAgICBjb25zdCBib2R5ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgICBpZihmaWxlKSB7XHJcbiAgICAgICAgUHJvamVjdFxyXG4gICAgICAgIC5maW5kT25lQW5kVXBkYXRlKHt1aWQ6IHVpZH0sXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGltYWdlVXJsOiBmaWxlLnBhdGgsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBib2R5LmRlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgICBuYW1lOiBib2R5Lm5hbWUsXHJcbiAgICAgICAgICAgIHRhZzogYm9keS50YWcsXHJcbiAgICAgICAgICAgIGNvbG9yOiBib2R5LmNvbG9yLFxyXG4gICAgICAgICAgICB1aWQ6IHJlcGxhY2VTcGFjZUZyb21TdHJpbmcoYm9keS5uYW1lKVxyXG4gICAgICAgICAgfSwge25ldzogdHJ1ZX0pXHJcblxyXG4gICAgICAgIC5leGVjKChlcnIsIGRhdGEpID0+IHtcclxuICAgICAgICAgIGlmKGVycikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe21lc3NhZ2U6ICdUaGUgcHJvamVjdCBpcyBub3QgdXBkYXRlZC4nfSlcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBmcy51bmxpbmsoYm9keS5vbGRJbWFnZVBhdGgsIChlcnIpID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHttZXNzYWdlOiBcIkNhbid0IHJlbW92ZSBpbWFnZS5cIn0pXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyBVcGRhdGUgdGhlIHByb2plY3QgYmFzZWQgb24gcHJvamVjdF9pZCByZWNlaXZlZCBmcm9tIHRoZSBib2R5O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBlbHNlIHtcclxuICAgICAgICBuZXh0KClcclxuICAgICAgfVxyXG4gICAgfSlcclxuICB9LFxyXG5cclxuICBkZWxldGUocmVxLCByZXMpIHtcclxuXHJcbiAgICBQcm9qZWN0XHJcblxyXG4gICAgLmZpbmRPbmVBbmRSZW1vdmUoe3VpZDogcmVxLnF1ZXJ5LnVpZH0pXHJcblxyXG4gICAgLmV4ZWMoKGVyciwgZGF0YSkgPT4ge1xyXG4gICAgICBsZXQgaW1hZ2VzID0gW107XHJcblxyXG4gICAgICBpZihlcnIpIHtcclxuXHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHttZXNzYWdlOiBcIkNhbid0IHJlbW92ZSB0aGUgcHJvamVjdC5cIn0pO1xyXG4gICAgICB9XHJcbiAgICAgIGltYWdlcy5wdXNoKGRhdGEuaW1hZ2VVcmwpO1xyXG4gICAgICBpbWFnZXMgPSBpbWFnZXMuY29uY2F0KGRhdGEudXBsb2Fkcyk7XHJcblxyXG4gICAgICBkZWxldGVGaWxlcyhpbWFnZXMsIChlcnIsIHN1Y2Nlc3MpID0+IHtcclxuICAgICAgICBpZihlcnIpIHtcclxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7bWVzc2FnZTogXCJDYW4ndCByZW1vdmUgZmlsZXMuXCIsIGVycm9yOiBlcnJ9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhzdWNjZXNzKVxyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxuICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcHJvamVjdHNDb250cm9sbGVyO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///./api/controllers/projectsController.js\\n\");\n\n//# sourceURL=webpack:///./api/controllers/projectsController.js?");

/***/ })

};